{
  "contractName": "VaultOwner",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_cakeVaultAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "cakeVault",
      "outputs": [
        {
          "internalType": "contract CakeVault",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_treasury",
          "type": "address"
        }
      ],
      "name": "setTreasury",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_performanceFee",
          "type": "uint256"
        }
      ],
      "name": "setPerformanceFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_callFee",
          "type": "uint256"
        }
      ],
      "name": "setCallFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawFee",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawFee",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawFeePeriod",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawFeePeriod",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "inCaseTokensGetStuck",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_cakeVaultAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"cakeVault\",\"outputs\":[{\"internalType\":\"contract CakeVault\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"inCaseTokensGetStuck\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_callFee\",\"type\":\"uint256\"}],\"name\":\"setCallFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_performanceFee\",\"type\":\"uint256\"}],\"name\":\"setPerformanceFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"}],\"name\":\"setTreasury\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFee\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawFeePeriod\",\"type\":\"uint256\"}],\"name\":\"setWithdrawFeePeriod\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_cakeVaultAddress\":\": CakeVault contract address\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only possible when contract not paused.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setAdmin()\":{\"details\":\"Only callable by the contract owner. It makes the admin == owner.\"},\"setCallFee(uint256)\":{\"details\":\"Only callable by the contract owner.\"},\"setPerformanceFee(uint256)\":{\"details\":\"Only callable by the contract owner.\"},\"setTreasury(address)\":{\"details\":\"Only callable by the contract owner.\"},\"setWithdrawFee(uint256)\":{\"details\":\"Only callable by the contract owner.\"},\"setWithdrawFeePeriod(uint256)\":{\"details\":\"Only callable by the contract owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only possible when contract is paused.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":\"Constructor\",\"inCaseTokensGetStuck(address)\":{\"notice\":\"Withdraw unexpected tokens sent to the Cake Vault\"},\"pause()\":{\"notice\":\"Triggers stopped state\"},\"setAdmin()\":{\"notice\":\"Sets admin address to this address\"},\"setCallFee(uint256)\":{\"notice\":\"Sets call fee\"},\"setPerformanceFee(uint256)\":{\"notice\":\"Sets performance fee\"},\"setTreasury(address)\":{\"notice\":\"Sets treasury address\"},\"setWithdrawFee(uint256)\":{\"notice\":\"Sets withdraw fee\"},\"setWithdrawFeePeriod(uint256)\":{\"notice\":\"Sets withdraw fee period\"},\"unpause()\":{\"notice\":\"Returns to normal state\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/home/ubuntu/work/demoswap-project/demoswap/pancake-pool/contracts/VaultOwner.sol\":\"VaultOwner\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/home/ubuntu/work/demoswap-project/demoswap/pancake-pool/contracts/CakeVault.sol\":{\"keccak256\":\"0x33822f19bf4b10fa95c86594b5d34620c2c598ff5de6c695723e937c556fc87e\",\"urls\":[\"bzz-raw://a40f9fc6b8f30d0ccfa0e0a72b9baa339f28fe737d3f82085fde380d9f611fd1\",\"dweb:/ipfs/QmaCySN7e4EupBfT3Es5RmdhnqvAebNTz7bD18fASqnk2t\"]},\"/home/ubuntu/work/demoswap-project/demoswap/pancake-pool/contracts/VaultOwner.sol\":{\"keccak256\":\"0xf437ebd60346bf72e2791ec1487100c781ebdb667db6c735a50c3d4710aa2f69\",\"urls\":[\"bzz-raw://438fba302ee6114d0a1e1b9ed549f3d620c8854fdf64a7d444355415ad5c5a62\",\"dweb:/ipfs/QmNQKjaixSJdNMAo1Fk4KZQ65D2Yyt5VeTkL5hpuv4gygt\"]},\"/home/ubuntu/work/demoswap-project/demoswap/pancake-pool/contracts/interfaces/IMasterChef.sol\":{\"keccak256\":\"0x821b1942cc9e44379b9bf1588ec06a2c1f81c93b62cb187639e93aa41ff3fcd3\",\"urls\":[\"bzz-raw://77b93a80219601b23edbbd37101a63d6beedffee26f6524198cc4a86de817797\",\"dweb:/ipfs/QmQApw8fvSm6JgpdRDnXE2Pew3LxG1omMhPYPo6DQqCXJq\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://90faf5851c02f9bd42c5bfb54d4f0421a2612f50ab80b2c4fa24fa3792071cc2\",\"dweb:/ipfs/QmRGM4F2PcGVF85aTfaA9YBhCHHDqrMhRjyp6fGeBTtirb\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://526dc85e1f9b9b45830e202568d267d93dde7a4fcccf4ad7798dadcd92304d3c\",\"dweb:/ipfs/QmaoXMB972J3cSDLtBq3xBo4jLwqD2uzXTwujtSPqkYVhR\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://24427744bd3e6cb73c17010119af12a318289c0253a4d9acb8576c9fb3797b08\",\"dweb:/ipfs/QmTLDqpKRBuxGxRAmjgXt9AkXyACW3MtKzi7PYjm5iMfGC\"]},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3a849c2d95e85463909e5b5c920b13e7a11216ca14127085e16d22b9379d52a\",\"dweb:/ipfs/QmUg3CZDbCCcQdroEpexBy5ZFd5vD1UWijWQq9qHZjtJNQ\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://256c8c8af5eb072bc473226ab2b2187149b8fc04f5f4a4820db22527f5ce8e3c\",\"dweb:/ipfs/QmRvi5BhnL7Rxf85KrJhwM6RRhukm4tzoctRdgQEheNyiN\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ded47ec7c96750f9bd04bbbc84f659992d4ba901cb7b532a52cd468272cf378f\",\"dweb:/ipfs/QmfBrGtQP7rZEqEg6Wz6jh2N2Kukpj1z5v3CGWmAqrzm96\"]},\"@openzeppelin/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x212fb1b1d4beaf74354dad9bc329f44ee3c5375ef1c32acff76b4ecefc10f1d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d21c68cb321d1c8d0fa39fd9ecb6bbe3b2f26623b0f38af280a010c916c85f23\",\"dweb:/ipfs/Qmf2P51HRC4ekDHLYfbXu5SXR33gXrWtq6oKSmfyWqVRuC\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161191a38038061191a8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050600061005461012f60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3508073ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505050610137565b600033905090565b60805160601c611799610181600039806102ea52806103bd52806104fa5280610637528061078952806108ba5280610b645280610cbe5280610dfb528061102052506117996000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063b6ac642a11610066578063b6ac642a146101ee578063def68a9c1461021c578063f0f4426014610260578063f2fde38b146102a4576100cf565b8063715018a6146101a65780638456cb59146101b05780638da5cb5b146101ba576100cf565b80631b1f100a146100d45780631efac1b81461010857806326465826146101365780632cae2096146101645780633f4ba83a1461016e57806370897b2314610178575b600080fd5b6100dc6102e8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101346004803603602081101561011e57600080fd5b810190808035906020019092919050505061030c565b005b6101626004803603602081101561014c57600080fd5b8101908080359060200190929190505050610449565b005b61016c610586565b005b6101766106d8565b005b6101a46004803603602081101561018e57600080fd5b8101908080359060200190929190505050610809565b005b6101ae610946565b005b6101b8610ab3565b005b6101c2610be4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61021a6004803603602081101561020457600080fd5b8101908080359060200190929190505050610c0d565b005b61025e6004803603602081101561023257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d4a565b005b6102a26004803603602081101561027657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f6f565b005b6102e6600480360360208110156102ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110c2565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b6103146112b4565b73ffffffffffffffffffffffffffffffffffffffff16610332610be4565b73ffffffffffffffffffffffffffffffffffffffff16146103bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631efac1b8826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561042e57600080fd5b505af1158015610442573d6000803e3d6000fd5b5050505050565b6104516112b4565b73ffffffffffffffffffffffffffffffffffffffff1661046f610be4565b73ffffffffffffffffffffffffffffffffffffffff16146104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166326465826826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561056b57600080fd5b505af115801561057f573d6000803e3d6000fd5b5050505050565b61058e6112b4565b73ffffffffffffffffffffffffffffffffffffffff166105ac610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610635576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663704b6c02306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156106be57600080fd5b505af11580156106d2573d6000803e3d6000fd5b50505050565b6106e06112b4565b73ffffffffffffffffffffffffffffffffffffffff166106fe610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610787576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633f4ba83a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b50505050565b6108116112b4565b73ffffffffffffffffffffffffffffffffffffffff1661082f610be4565b73ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370897b23826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561092b57600080fd5b505af115801561093f573d6000803e3d6000fd5b5050505050565b61094e6112b4565b73ffffffffffffffffffffffffffffffffffffffff1661096c610be4565b73ffffffffffffffffffffffffffffffffffffffff16146109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610abb6112b4565b73ffffffffffffffffffffffffffffffffffffffff16610ad9610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610b62576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bca57600080fd5b505af1158015610bde573d6000803e3d6000fd5b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c156112b4565b73ffffffffffffffffffffffffffffffffffffffff16610c33610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610cbc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b6ac642a826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b5050505050565b610d526112b4565b73ffffffffffffffffffffffffffffffffffffffff16610d70610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610df9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663def68a9c826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610e8257600080fd5b505af1158015610e96573d6000803e3d6000fd5b5050505060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d6020811015610f2d57600080fd5b81019080805190602001909291905050509050610f6b33828473ffffffffffffffffffffffffffffffffffffffff166112bc9092919063ffffffff16565b5050565b610f776112b4565b73ffffffffffffffffffffffffffffffffffffffff16610f95610be4565b73ffffffffffffffffffffffffffffffffffffffff161461101e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f0f44260826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156110a757600080fd5b505af11580156110bb573d6000803e3d6000fd5b5050505050565b6110ca6112b4565b73ffffffffffffffffffffffffffffffffffffffff166110e8610be4565b73ffffffffffffffffffffffffffffffffffffffff1614611171576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806116ee6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6113598363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061135e565b505050565b60606113c0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661144d9092919063ffffffff16565b9050600081511115611448578080602001905160208110156113e157600080fd5b8101908080519060200190929190505050611447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061173a602a913960400191505060405180910390fd5b5b505050565b606061145c8484600085611465565b90509392505050565b6060824710156114c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117146026913960400191505060405180910390fd5b6114c98561160e565b61153b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061158b5780518252602082019150602081019050602083039250611568565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146115ed576040519150601f19603f3d011682016040523d82523d6000602084013e6115f2565b606091505b5091509150611602828286611621565b92505050949350505050565b600080823b905060008111915050919050565b60608315611631578290506116e6565b6000835111156116445782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116ab578082015181840152602081019050611690565b50505050905090810190601f1680156116d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122006770db624e7a5031bfecf6b5e529d2cac3509ea61bdff6a47c8b5f16e1feeea64736f6c634300060c0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100cf5760003560e01c8063715018a61161008c578063b6ac642a11610066578063b6ac642a146101ee578063def68a9c1461021c578063f0f4426014610260578063f2fde38b146102a4576100cf565b8063715018a6146101a65780638456cb59146101b05780638da5cb5b146101ba576100cf565b80631b1f100a146100d45780631efac1b81461010857806326465826146101365780632cae2096146101645780633f4ba83a1461016e57806370897b2314610178575b600080fd5b6100dc6102e8565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6101346004803603602081101561011e57600080fd5b810190808035906020019092919050505061030c565b005b6101626004803603602081101561014c57600080fd5b8101908080359060200190929190505050610449565b005b61016c610586565b005b6101766106d8565b005b6101a46004803603602081101561018e57600080fd5b8101908080359060200190929190505050610809565b005b6101ae610946565b005b6101b8610ab3565b005b6101c2610be4565b604051808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61021a6004803603602081101561020457600080fd5b8101908080359060200190929190505050610c0d565b005b61025e6004803603602081101561023257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610d4a565b005b6102a26004803603602081101561027657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610f6f565b005b6102e6600480360360208110156102ba57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110c2565b005b7f000000000000000000000000000000000000000000000000000000000000000081565b6103146112b4565b73ffffffffffffffffffffffffffffffffffffffff16610332610be4565b73ffffffffffffffffffffffffffffffffffffffff16146103bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16631efac1b8826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561042e57600080fd5b505af1158015610442573d6000803e3d6000fd5b5050505050565b6104516112b4565b73ffffffffffffffffffffffffffffffffffffffff1661046f610be4565b73ffffffffffffffffffffffffffffffffffffffff16146104f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166326465826826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561056b57600080fd5b505af115801561057f573d6000803e3d6000fd5b5050505050565b61058e6112b4565b73ffffffffffffffffffffffffffffffffffffffff166105ac610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610635576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663704b6c02306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156106be57600080fd5b505af11580156106d2573d6000803e3d6000fd5b50505050565b6106e06112b4565b73ffffffffffffffffffffffffffffffffffffffff166106fe610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610787576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16633f4ba83a6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156107ef57600080fd5b505af1158015610803573d6000803e3d6000fd5b50505050565b6108116112b4565b73ffffffffffffffffffffffffffffffffffffffff1661082f610be4565b73ffffffffffffffffffffffffffffffffffffffff16146108b8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166370897b23826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b15801561092b57600080fd5b505af115801561093f573d6000803e3d6000fd5b5050505050565b61094e6112b4565b73ffffffffffffffffffffffffffffffffffffffff1661096c610be4565b73ffffffffffffffffffffffffffffffffffffffff16146109f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b610abb6112b4565b73ffffffffffffffffffffffffffffffffffffffff16610ad9610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610b62576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16638456cb596040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610bca57600080fd5b505af1158015610bde573d6000803e3d6000fd5b50505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610c156112b4565b73ffffffffffffffffffffffffffffffffffffffff16610c33610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610cbc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663b6ac642a826040518263ffffffff1660e01b815260040180828152602001915050600060405180830381600087803b158015610d2f57600080fd5b505af1158015610d43573d6000803e3d6000fd5b5050505050565b610d526112b4565b73ffffffffffffffffffffffffffffffffffffffff16610d70610be4565b73ffffffffffffffffffffffffffffffffffffffff1614610df9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663def68a9c826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b158015610e8257600080fd5b505af1158015610e96573d6000803e3d6000fd5b5050505060008173ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610f0357600080fd5b505afa158015610f17573d6000803e3d6000fd5b505050506040513d6020811015610f2d57600080fd5b81019080805190602001909291905050509050610f6b33828473ffffffffffffffffffffffffffffffffffffffff166112bc9092919063ffffffff16565b5050565b610f776112b4565b73ffffffffffffffffffffffffffffffffffffffff16610f95610be4565b73ffffffffffffffffffffffffffffffffffffffff161461101e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663f0f44260826040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156110a757600080fd5b505af11580156110bb573d6000803e3d6000fd5b5050505050565b6110ca6112b4565b73ffffffffffffffffffffffffffffffffffffffff166110e8610be4565b73ffffffffffffffffffffffffffffffffffffffff1614611171576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156111f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806116ee6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff1660008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b6113598363a9059cbb60e01b8484604051602401808373ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050604051602081830303815290604052907bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061135e565b505050565b60606113c0826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661144d9092919063ffffffff16565b9050600081511115611448578080602001905160208110156113e157600080fd5b8101908080519060200190929190505050611447576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a81526020018061173a602a913960400191505060405180910390fd5b5b505050565b606061145c8484600085611465565b90509392505050565b6060824710156114c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806117146026913960400191505060405180910390fd5b6114c98561160e565b61153b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000081525060200191505060405180910390fd5b600060608673ffffffffffffffffffffffffffffffffffffffff1685876040518082805190602001908083835b6020831061158b5780518252602082019150602081019050602083039250611568565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146115ed576040519150601f19603f3d011682016040523d82523d6000602084013e6115f2565b606091505b5091509150611602828286611621565b92505050949350505050565b600080823b905060008111915050919050565b60608315611631578290506116e6565b6000835111156116445782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156116ab578082015181840152602081019050611690565b50505050905090810190601f1680156116d85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b939250505056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122006770db624e7a5031bfecf6b5e529d2cac3509ea61bdff6a47c8b5f16e1feeea64736f6c634300060c0033",
  "immutableReferences": {
    "2825": [
      {
        "length": 32,
        "start": 746
      },
      {
        "length": 32,
        "start": 957
      },
      {
        "length": 32,
        "start": 1274
      },
      {
        "length": 32,
        "start": 1591
      },
      {
        "length": 32,
        "start": 1929
      },
      {
        "length": 32,
        "start": 2234
      },
      {
        "length": 32,
        "start": 2916
      },
      {
        "length": 32,
        "start": 3262
      },
      {
        "length": 32,
        "start": 3579
      },
      {
        "length": 32,
        "start": 4128
      }
    ]
  },
  "sourceMap": "222:2403:5:-:0;;;438:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;884:17:8;904:12;:10;;;:12;;:::i;:::-;884:32;;935:9;926:6;;:18;;;;;;;;;;;;;;;;;;992:9;959:43;;988:1;959:43;;;;;;;;;;;;850:159;516:17:5;494:40;;;;;;;;;;;;438:103;222:2403;;598:104:13;651:15;685:10;678:17;;598:104;:::o;222:2403:5:-;;;;;;;;;;;;",
  "deployedSourceMap": "222:2403:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;292:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1781:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1342:104;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;698:89;;;:::i;:::-;;2549:74;;;:::i;:::-;;1110:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1717:145:8;;;:::i;:::-;;2367:70:5;;;:::i;:::-;;1085:85:8;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;1550:120:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2012:243;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;895:108;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2011:240:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;292:36:5;;;:::o;1781:144::-;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1868:9:5::1;:30;;;1899:18;1868:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1781:144:::0;:::o;1342:104::-;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1409:9:5::1;:20;;;1430:8;1409:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1342:104:::0;:::o;698:89::-;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;747:9:5::1;:18;;;774:4;747:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;698:89::o:0;2549:74::-;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2597:9:5::1;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2549:74::o:0;1110:132::-;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1191:9:5::1;:27;;;1219:15;1191:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1110:132:::0;:::o;1717:145:8:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1823:1:::1;1786:40;;1807:6;::::0;::::1;;;;;;;;1786:40;;;;;;;;;;;;1853:1;1836:6:::0;::::1;:19;;;;;;;;;;;;;;;;;;1717:145::o:0;2367:70:5:-;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2413:9:5::1;:15;;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2367:70::o:0;1085:85:8:-;1131:7;1157:6;;;;;;;;;;;1150:13;;1085:85;:::o;1550:120:5:-;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1625:9:5::1;:24;;;1650:12;1625:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1550:120:::0;:::o;2012:243::-;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2087:9:5::1;:30;;;2118:6;2087:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;2135:14;2159:6;2152:24;;;2185:4;2152:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;2135:56;;2201:47;2229:10;2241:6;2208;2201:27;;;;:47;;;;;:::i;:::-;1367:1:8;2012:243:5::0;:::o;895:108::-;1308:12:8;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;964:9:5::1;:21;;;986:9;964:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;895:108:::0;:::o;2011:240:8:-;1308:12;:10;:12::i;:::-;1297:23;;:7;:5;:7::i;:::-;:23;;;1289:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2119:1:::1;2099:22;;:8;:22;;;;2091:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2208:8;2179:38;;2200:6;::::0;::::1;;;;;;;;2179:38;;;;;;;;;;;;2236:8;2227:6;::::0;:17:::1;;;;;;;;;;;;;;;;;;2011:240:::0;:::o;598:104:13:-;651:15;685:10;678:17;;598:104;:::o;704:175:11:-;786:86;806:5;836:23;;;861:2;865:5;813:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;786:19;:86::i;:::-;704:175;;;:::o;2967:751::-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;3412:27;;;;:69;;;;;:::i;:::-;3386:95;;3515:1;3495:10;:17;:21;3491:221;;;3635:10;3624:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3616:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3491:221;2967:751;;;:::o;3581:193:12:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;:11;;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;;;;4608:523;;;;;;:::o;726:413::-;786:4;989:12;1098:7;1086:20;1078:28;;1131:1;1124:4;:8;1117:15;;;726:413;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;7264:10;7257:17;;;;7230:580;7395:1;7375:10;:17;:21;7371:429;;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7091:725;;;;;;:::o",
  "source": "pragma solidity 0.6.12;\n\nimport '@openzeppelin/contracts/access/Ownable.sol';\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\nimport '@openzeppelin/contracts/token/ERC20/SafeERC20.sol';\nimport './CakeVault.sol';\n\ncontract VaultOwner is Ownable {\n    using SafeERC20 for IERC20;\n\n    CakeVault public immutable cakeVault;\n\n    /**\n     * @notice Constructor\n     * @param _cakeVaultAddress: CakeVault contract address\n     */\n    constructor(address _cakeVaultAddress) public {\n        cakeVault = CakeVault(_cakeVaultAddress);\n    }\n\n    /**\n     * @notice Sets admin address to this address\n     * @dev Only callable by the contract owner.\n     * It makes the admin == owner.\n     */\n    function setAdmin() external onlyOwner {\n        cakeVault.setAdmin(address(this));\n    }\n\n    /**\n     * @notice Sets treasury address\n     * @dev Only callable by the contract owner.\n     */\n    function setTreasury(address _treasury) external onlyOwner {\n        cakeVault.setTreasury(_treasury);\n    }\n\n    /**\n     * @notice Sets performance fee\n     * @dev Only callable by the contract owner.\n     */\n    function setPerformanceFee(uint256 _performanceFee) external onlyOwner {\n        cakeVault.setPerformanceFee(_performanceFee);\n    }\n\n    /**\n     * @notice Sets call fee\n     * @dev Only callable by the contract owner.\n     */\n    function setCallFee(uint256 _callFee) external onlyOwner {\n        cakeVault.setCallFee(_callFee);\n    }\n\n    /**\n     * @notice Sets withdraw fee\n     * @dev Only callable by the contract owner.\n     */\n    function setWithdrawFee(uint256 _withdrawFee) external onlyOwner {\n        cakeVault.setWithdrawFee(_withdrawFee);\n    }\n\n    /**\n     * @notice Sets withdraw fee period\n     * @dev Only callable by the contract owner.\n     */\n    function setWithdrawFeePeriod(uint256 _withdrawFeePeriod) external onlyOwner {\n        cakeVault.setWithdrawFeePeriod(_withdrawFeePeriod);\n    }\n\n    /**\n     * @notice Withdraw unexpected tokens sent to the Cake Vault\n     */\n    function inCaseTokensGetStuck(address _token) external onlyOwner {\n        cakeVault.inCaseTokensGetStuck(_token);\n        uint256 amount = IERC20(_token).balanceOf(address(this));\n        IERC20(_token).safeTransfer(msg.sender, amount);\n    }\n\n    /**\n     * @notice Triggers stopped state\n     * @dev Only possible when contract not paused.\n     */\n    function pause() external onlyOwner {\n        cakeVault.pause();\n    }\n\n    /**\n     * @notice Returns to normal state\n     * @dev Only possible when contract is paused.\n     */\n    function unpause() external onlyOwner {\n        cakeVault.unpause();\n    }\n}",
  "sourcePath": "/home/ubuntu/work/demoswap-project/demoswap/pancake-pool/contracts/VaultOwner.sol",
  "ast": {
    "absolutePath": "/home/ubuntu/work/demoswap-project/demoswap/pancake-pool/contracts/VaultOwner.sol",
    "exportedSymbols": {
      "VaultOwner": [
        2990
      ]
    },
    "id": 2991,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2814,
        "literals": [
          "solidity",
          "0.6",
          ".12"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "id": 2815,
        "nodeType": "ImportDirective",
        "scope": 2991,
        "sourceUnit": 3401,
        "src": "25:52:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "id": 2816,
        "nodeType": "ImportDirective",
        "scope": 2991,
        "sourceUnit": 3834,
        "src": "78:56:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
        "id": 2817,
        "nodeType": "ImportDirective",
        "scope": 2991,
        "sourceUnit": 4047,
        "src": "135:59:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/home/ubuntu/work/demoswap-project/demoswap/pancake-pool/contracts/CakeVault.sol",
        "file": "./CakeVault.sol",
        "id": 2818,
        "nodeType": "ImportDirective",
        "scope": 2991,
        "sourceUnit": 983,
        "src": "195:25:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2819,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3400,
              "src": "245:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$3400",
                "typeString": "contract Ownable"
              }
            },
            "id": 2820,
            "nodeType": "InheritanceSpecifier",
            "src": "245:7:5"
          }
        ],
        "contractDependencies": [
          3400,
          4365
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 2990,
        "linearizedBaseContracts": [
          2990,
          3400,
          4365
        ],
        "name": "VaultOwner",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 2823,
            "libraryName": {
              "contractScope": null,
              "id": 2821,
              "name": "SafeERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4046,
              "src": "265:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeERC20_$4046",
                "typeString": "library SafeERC20"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "259:27:5",
            "typeName": {
              "contractScope": null,
              "id": 2822,
              "name": "IERC20",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3833,
              "src": "279:6:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$3833",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "constant": false,
            "functionSelector": "1b1f100a",
            "id": 2825,
            "mutability": "immutable",
            "name": "cakeVault",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 2990,
            "src": "292:36:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CakeVault_$982",
              "typeString": "contract CakeVault"
            },
            "typeName": {
              "contractScope": null,
              "id": 2824,
              "name": "CakeVault",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 982,
              "src": "292:9:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CakeVault_$982",
                "typeString": "contract CakeVault"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2837,
              "nodeType": "Block",
              "src": "484:57:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 2831,
                      "name": "cakeVault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 2825,
                      "src": "494:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CakeVault_$982",
                        "typeString": "contract CakeVault"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 2833,
                          "name": "_cakeVaultAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2828,
                          "src": "516:17:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 2832,
                        "name": "CakeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 982,
                        "src": "506:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_CakeVault_$982_$",
                          "typeString": "type(contract CakeVault)"
                        }
                      },
                      "id": 2834,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "506:28:5",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CakeVault_$982",
                        "typeString": "contract CakeVault"
                      }
                    },
                    "src": "494:40:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CakeVault_$982",
                      "typeString": "contract CakeVault"
                    }
                  },
                  "id": 2836,
                  "nodeType": "ExpressionStatement",
                  "src": "494:40:5"
                }
              ]
            },
            "documentation": {
              "id": 2826,
              "nodeType": "StructuredDocumentation",
              "src": "335:98:5",
              "text": " @notice Constructor\n @param _cakeVaultAddress: CakeVault contract address"
            },
            "id": 2838,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2829,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2828,
                  "mutability": "mutable",
                  "name": "_cakeVaultAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2838,
                  "src": "450:25:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2827,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "450:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "449:27:5"
            },
            "returnParameters": {
              "id": 2830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:0:5"
            },
            "scope": 2990,
            "src": "438:103:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2853,
              "nodeType": "Block",
              "src": "737:50:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2849,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "774:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultOwner_$2990",
                              "typeString": "contract VaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VaultOwner_$2990",
                              "typeString": "contract VaultOwner"
                            }
                          ],
                          "id": 2848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "766:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2847,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "766:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "766:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2844,
                        "name": "cakeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "747:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CakeVault_$982",
                          "typeString": "contract CakeVault"
                        }
                      },
                      "id": 2846,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setAdmin",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 417,
                      "src": "747:18:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "747:33:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2852,
                  "nodeType": "ExpressionStatement",
                  "src": "747:33:5"
                }
              ]
            },
            "documentation": {
              "id": 2839,
              "nodeType": "StructuredDocumentation",
              "src": "547:146:5",
              "text": " @notice Sets admin address to this address\n @dev Only callable by the contract owner.\n It makes the admin == owner."
            },
            "functionSelector": "2cae2096",
            "id": 2854,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2842,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2841,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3349,
                  "src": "727:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "727:9:5"
              }
            ],
            "name": "setAdmin",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2840,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "715:2:5"
            },
            "returnParameters": {
              "id": 2843,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "737:0:5"
            },
            "scope": 2990,
            "src": "698:89:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2868,
              "nodeType": "Block",
              "src": "954:49:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2865,
                        "name": "_treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2857,
                        "src": "986:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2862,
                        "name": "cakeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "964:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CakeVault_$982",
                          "typeString": "contract CakeVault"
                        }
                      },
                      "id": 2864,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setTreasury",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 440,
                      "src": "964:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "964:32:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2867,
                  "nodeType": "ExpressionStatement",
                  "src": "964:32:5"
                }
              ]
            },
            "documentation": {
              "id": 2855,
              "nodeType": "StructuredDocumentation",
              "src": "793:97:5",
              "text": " @notice Sets treasury address\n @dev Only callable by the contract owner."
            },
            "functionSelector": "f0f44260",
            "id": 2869,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2860,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2859,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3349,
                  "src": "944:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "944:9:5"
              }
            ],
            "name": "setTreasury",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2858,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2857,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2869,
                  "src": "916:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2856,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "916:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "915:19:5"
            },
            "returnParameters": {
              "id": 2861,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "954:0:5"
            },
            "scope": 2990,
            "src": "895:108:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2883,
              "nodeType": "Block",
              "src": "1181:61:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2880,
                        "name": "_performanceFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2872,
                        "src": "1219:15:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2877,
                        "name": "cakeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "1191:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CakeVault_$982",
                          "typeString": "contract CakeVault"
                        }
                      },
                      "id": 2879,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setPerformanceFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 460,
                      "src": "1191:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2881,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1191:44:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2882,
                  "nodeType": "ExpressionStatement",
                  "src": "1191:44:5"
                }
              ]
            },
            "documentation": {
              "id": 2870,
              "nodeType": "StructuredDocumentation",
              "src": "1009:96:5",
              "text": " @notice Sets performance fee\n @dev Only callable by the contract owner."
            },
            "functionSelector": "70897b23",
            "id": 2884,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2875,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2874,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3349,
                  "src": "1171:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1171:9:5"
              }
            ],
            "name": "setPerformanceFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2873,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2872,
                  "mutability": "mutable",
                  "name": "_performanceFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2884,
                  "src": "1137:23:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1137:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1136:25:5"
            },
            "returnParameters": {
              "id": 2876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1181:0:5"
            },
            "scope": 2990,
            "src": "1110:132:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2898,
              "nodeType": "Block",
              "src": "1399:47:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2895,
                        "name": "_callFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2887,
                        "src": "1430:8:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2892,
                        "name": "cakeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "1409:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CakeVault_$982",
                          "typeString": "contract CakeVault"
                        }
                      },
                      "id": 2894,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCallFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 480,
                      "src": "1409:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2896,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1409:30:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2897,
                  "nodeType": "ExpressionStatement",
                  "src": "1409:30:5"
                }
              ]
            },
            "documentation": {
              "id": 2885,
              "nodeType": "StructuredDocumentation",
              "src": "1248:89:5",
              "text": " @notice Sets call fee\n @dev Only callable by the contract owner."
            },
            "functionSelector": "26465826",
            "id": 2899,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2890,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2889,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3349,
                  "src": "1389:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1389:9:5"
              }
            ],
            "name": "setCallFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2887,
                  "mutability": "mutable",
                  "name": "_callFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2899,
                  "src": "1362:16:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1362:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1361:18:5"
            },
            "returnParameters": {
              "id": 2891,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1399:0:5"
            },
            "scope": 2990,
            "src": "1342:104:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2913,
              "nodeType": "Block",
              "src": "1615:55:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2910,
                        "name": "_withdrawFee",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2902,
                        "src": "1650:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2907,
                        "name": "cakeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "1625:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CakeVault_$982",
                          "typeString": "contract CakeVault"
                        }
                      },
                      "id": 2909,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setWithdrawFee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 500,
                      "src": "1625:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1625:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2912,
                  "nodeType": "ExpressionStatement",
                  "src": "1625:38:5"
                }
              ]
            },
            "documentation": {
              "id": 2900,
              "nodeType": "StructuredDocumentation",
              "src": "1452:93:5",
              "text": " @notice Sets withdraw fee\n @dev Only callable by the contract owner."
            },
            "functionSelector": "b6ac642a",
            "id": 2914,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2905,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2904,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3349,
                  "src": "1605:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1605:9:5"
              }
            ],
            "name": "setWithdrawFee",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2903,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2902,
                  "mutability": "mutable",
                  "name": "_withdrawFee",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2914,
                  "src": "1574:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1574:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1573:22:5"
            },
            "returnParameters": {
              "id": 2906,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1615:0:5"
            },
            "scope": 2990,
            "src": "1550:120:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2928,
              "nodeType": "Block",
              "src": "1858:67:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2925,
                        "name": "_withdrawFeePeriod",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2917,
                        "src": "1899:18:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2922,
                        "name": "cakeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "1868:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CakeVault_$982",
                          "typeString": "contract CakeVault"
                        }
                      },
                      "id": 2924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setWithdrawFeePeriod",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 520,
                      "src": "1868:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 2926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1868:50:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2927,
                  "nodeType": "ExpressionStatement",
                  "src": "1868:50:5"
                }
              ]
            },
            "documentation": {
              "id": 2915,
              "nodeType": "StructuredDocumentation",
              "src": "1676:100:5",
              "text": " @notice Sets withdraw fee period\n @dev Only callable by the contract owner."
            },
            "functionSelector": "1efac1b8",
            "id": 2929,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2920,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2919,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3349,
                  "src": "1848:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1848:9:5"
              }
            ],
            "name": "setWithdrawFeePeriod",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2917,
                  "mutability": "mutable",
                  "name": "_withdrawFeePeriod",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2929,
                  "src": "1811:26:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 2916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1811:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1810:28:5"
            },
            "returnParameters": {
              "id": 2921,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1858:0:5"
            },
            "scope": 2990,
            "src": "1781:144:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2964,
              "nodeType": "Block",
              "src": "2077:178:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2940,
                        "name": "_token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2932,
                        "src": "2118:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2937,
                        "name": "cakeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "2087:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CakeVault_$982",
                          "typeString": "contract CakeVault"
                        }
                      },
                      "id": 2939,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "inCaseTokensGetStuck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 584,
                      "src": "2087:30:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 2941,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2087:38:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2942,
                  "nodeType": "ExpressionStatement",
                  "src": "2087:38:5"
                },
                {
                  "assignments": [
                    2944
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 2944,
                      "mutability": "mutable",
                      "name": "amount",
                      "nodeType": "VariableDeclaration",
                      "overrides": null,
                      "scope": 2964,
                      "src": "2135:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2943,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2135:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 2954,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2951,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2185:4:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_VaultOwner_$2990",
                              "typeString": "contract VaultOwner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_VaultOwner_$2990",
                              "typeString": "contract VaultOwner"
                            }
                          ],
                          "id": 2950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2177:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 2949,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2177:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": null,
                              "typeString": null
                            }
                          }
                        },
                        "id": 2952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2177:13:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2946,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2932,
                            "src": "2159:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2945,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3833,
                          "src": "2152:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3833_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2947,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2152:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3833",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3772,
                      "src": "2152:24:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 2953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2152:39:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2135:56:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2959,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2229:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "2229:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 2961,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2944,
                        "src": "2241:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 2956,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2932,
                            "src": "2208:6:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 2955,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3833,
                          "src": "2201:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$3833_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 2957,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2201:14:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$3833",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 2958,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3867,
                      "src": "2201:27:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$3833_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$3833_$",
                        "typeString": "function (contract IERC20,address,uint256)"
                      }
                    },
                    "id": 2962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2201:47:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2963,
                  "nodeType": "ExpressionStatement",
                  "src": "2201:47:5"
                }
              ]
            },
            "documentation": {
              "id": 2930,
              "nodeType": "StructuredDocumentation",
              "src": "1931:76:5",
              "text": " @notice Withdraw unexpected tokens sent to the Cake Vault"
            },
            "functionSelector": "def68a9c",
            "id": 2965,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2935,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2934,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3349,
                  "src": "2067:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2067:9:5"
              }
            ],
            "name": "inCaseTokensGetStuck",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2932,
                  "mutability": "mutable",
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 2965,
                  "src": "2042:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2042:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2041:16:5"
            },
            "returnParameters": {
              "id": 2936,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2077:0:5"
            },
            "scope": 2990,
            "src": "2012:243:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2976,
              "nodeType": "Block",
              "src": "2403:34:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2971,
                        "name": "cakeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "2413:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CakeVault_$982",
                          "typeString": "contract CakeVault"
                        }
                      },
                      "id": 2973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 599,
                      "src": "2413:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 2974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2413:17:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2975,
                  "nodeType": "ExpressionStatement",
                  "src": "2413:17:5"
                }
              ]
            },
            "documentation": {
              "id": 2966,
              "nodeType": "StructuredDocumentation",
              "src": "2261:101:5",
              "text": " @notice Triggers stopped state\n @dev Only possible when contract not paused."
            },
            "functionSelector": "8456cb59",
            "id": 2977,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2969,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2968,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3349,
                  "src": "2393:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2393:9:5"
              }
            ],
            "name": "pause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2381:2:5"
            },
            "returnParameters": {
              "id": 2970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2403:0:5"
            },
            "scope": 2990,
            "src": "2367:70:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2988,
              "nodeType": "Block",
              "src": "2587:36:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2983,
                        "name": "cakeVault",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2825,
                        "src": "2597:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CakeVault_$982",
                          "typeString": "contract CakeVault"
                        }
                      },
                      "id": 2985,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unpause",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 614,
                      "src": "2597:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 2986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2597:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2987,
                  "nodeType": "ExpressionStatement",
                  "src": "2597:19:5"
                }
              ]
            },
            "documentation": {
              "id": 2978,
              "nodeType": "StructuredDocumentation",
              "src": "2443:101:5",
              "text": " @notice Returns to normal state\n @dev Only possible when contract is paused."
            },
            "functionSelector": "3f4ba83a",
            "id": 2989,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2981,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2980,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 3349,
                  "src": "2577:9:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2577:9:5"
              }
            ],
            "name": "unpause",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 2979,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2565:2:5"
            },
            "returnParameters": {
              "id": 2982,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2587:0:5"
            },
            "scope": 2990,
            "src": "2549:74:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 2991,
        "src": "222:2403:5"
      }
    ],
    "src": "0:2625:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/home/ubuntu/work/demoswap-project/demoswap/pancake-pool/contracts/VaultOwner.sol",
      "exportedSymbols": {
        "VaultOwner": [
          2990
        ]
      },
      "license": null
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.6",
            ".12"
          ]
        },
        "id": 2814,
        "name": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "attributes": {
          "SourceUnit": 3401,
          "absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
          "file": "@openzeppelin/contracts/access/Ownable.sol",
          "scope": 2991,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2815,
        "name": "ImportDirective",
        "src": "25:52:5"
      },
      {
        "attributes": {
          "SourceUnit": 3834,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
          "scope": 2991,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2816,
        "name": "ImportDirective",
        "src": "78:56:5"
      },
      {
        "attributes": {
          "SourceUnit": 4047,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
          "file": "@openzeppelin/contracts/token/ERC20/SafeERC20.sol",
          "scope": 2991,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2817,
        "name": "ImportDirective",
        "src": "135:59:5"
      },
      {
        "attributes": {
          "SourceUnit": 983,
          "absolutePath": "/home/ubuntu/work/demoswap-project/demoswap/pancake-pool/contracts/CakeVault.sol",
          "file": "./CakeVault.sol",
          "scope": 2991,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 2818,
        "name": "ImportDirective",
        "src": "195:25:5"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            3400,
            4365
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            2990,
            3400,
            4365
          ],
          "name": "VaultOwner",
          "scope": 2991
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "Ownable",
                  "referencedDeclaration": 3400,
                  "type": "contract Ownable"
                },
                "id": 2819,
                "name": "UserDefinedTypeName",
                "src": "245:7:5"
              }
            ],
            "id": 2820,
            "name": "InheritanceSpecifier",
            "src": "245:7:5"
          },
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeERC20",
                  "referencedDeclaration": 4046,
                  "type": "library SafeERC20"
                },
                "id": 2821,
                "name": "UserDefinedTypeName",
                "src": "265:9:5"
              },
              {
                "attributes": {
                  "contractScope": null,
                  "name": "IERC20",
                  "referencedDeclaration": 3833,
                  "type": "contract IERC20"
                },
                "id": 2822,
                "name": "UserDefinedTypeName",
                "src": "279:6:5"
              }
            ],
            "id": 2823,
            "name": "UsingForDirective",
            "src": "259:27:5"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "1b1f100a",
              "mutability": "immutable",
              "name": "cakeVault",
              "overrides": null,
              "scope": 2990,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "contract CakeVault",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "CakeVault",
                  "referencedDeclaration": 982,
                  "type": "contract CakeVault"
                },
                "id": 2824,
                "name": "UserDefinedTypeName",
                "src": "292:9:5"
              }
            ],
            "id": 2825,
            "name": "VariableDeclaration",
            "src": "292:36:5"
          },
          {
            "attributes": {
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "overrides": null,
              "scope": 2990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Constructor\n @param _cakeVaultAddress: CakeVault contract address"
                },
                "id": 2826,
                "name": "StructuredDocumentation",
                "src": "335:98:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_cakeVaultAddress",
                      "overrides": null,
                      "scope": 2838,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2827,
                        "name": "ElementaryTypeName",
                        "src": "450:7:5"
                      }
                    ],
                    "id": 2828,
                    "name": "VariableDeclaration",
                    "src": "450:25:5"
                  }
                ],
                "id": 2829,
                "name": "ParameterList",
                "src": "449:27:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2830,
                "name": "ParameterList",
                "src": "484:0:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract CakeVault"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2825,
                              "type": "contract CakeVault",
                              "value": "cakeVault"
                            },
                            "id": 2831,
                            "name": "Identifier",
                            "src": "494:9:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "contract CakeVault",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 982,
                                  "type": "type(contract CakeVault)",
                                  "value": "CakeVault"
                                },
                                "id": 2832,
                                "name": "Identifier",
                                "src": "506:9:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2828,
                                  "type": "address",
                                  "value": "_cakeVaultAddress"
                                },
                                "id": 2833,
                                "name": "Identifier",
                                "src": "516:17:5"
                              }
                            ],
                            "id": 2834,
                            "name": "FunctionCall",
                            "src": "506:28:5"
                          }
                        ],
                        "id": 2835,
                        "name": "Assignment",
                        "src": "494:40:5"
                      }
                    ],
                    "id": 2836,
                    "name": "ExpressionStatement",
                    "src": "494:40:5"
                  }
                ],
                "id": 2837,
                "name": "Block",
                "src": "484:57:5"
              }
            ],
            "id": 2838,
            "name": "FunctionDefinition",
            "src": "438:103:5"
          },
          {
            "attributes": {
              "functionSelector": "2cae2096",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setAdmin",
              "overrides": null,
              "scope": 2990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Sets admin address to this address\n @dev Only callable by the contract owner.\n It makes the admin == owner."
                },
                "id": 2839,
                "name": "StructuredDocumentation",
                "src": "547:146:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2840,
                "name": "ParameterList",
                "src": "715:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2843,
                "name": "ParameterList",
                "src": "737:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3349,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2841,
                    "name": "Identifier",
                    "src": "727:9:5"
                  }
                ],
                "id": 2842,
                "name": "ModifierInvocation",
                "src": "727:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "setAdmin",
                              "referencedDeclaration": 417,
                              "type": "function (address) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2825,
                                  "type": "contract CakeVault",
                                  "value": "cakeVault"
                                },
                                "id": 2844,
                                "name": "Identifier",
                                "src": "747:9:5"
                              }
                            ],
                            "id": 2846,
                            "name": "MemberAccess",
                            "src": "747:18:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VaultOwner_$2990",
                                      "typeString": "contract VaultOwner"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 2847,
                                    "name": "ElementaryTypeName",
                                    "src": "766:7:5"
                                  }
                                ],
                                "id": 2848,
                                "name": "ElementaryTypeNameExpression",
                                "src": "766:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract VaultOwner",
                                  "value": "this"
                                },
                                "id": 2849,
                                "name": "Identifier",
                                "src": "774:4:5"
                              }
                            ],
                            "id": 2850,
                            "name": "FunctionCall",
                            "src": "766:13:5"
                          }
                        ],
                        "id": 2851,
                        "name": "FunctionCall",
                        "src": "747:33:5"
                      }
                    ],
                    "id": 2852,
                    "name": "ExpressionStatement",
                    "src": "747:33:5"
                  }
                ],
                "id": 2853,
                "name": "Block",
                "src": "737:50:5"
              }
            ],
            "id": 2854,
            "name": "FunctionDefinition",
            "src": "698:89:5"
          },
          {
            "attributes": {
              "functionSelector": "f0f44260",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setTreasury",
              "overrides": null,
              "scope": 2990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Sets treasury address\n @dev Only callable by the contract owner."
                },
                "id": 2855,
                "name": "StructuredDocumentation",
                "src": "793:97:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_treasury",
                      "overrides": null,
                      "scope": 2869,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2856,
                        "name": "ElementaryTypeName",
                        "src": "916:7:5"
                      }
                    ],
                    "id": 2857,
                    "name": "VariableDeclaration",
                    "src": "916:17:5"
                  }
                ],
                "id": 2858,
                "name": "ParameterList",
                "src": "915:19:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2861,
                "name": "ParameterList",
                "src": "954:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3349,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2859,
                    "name": "Identifier",
                    "src": "944:9:5"
                  }
                ],
                "id": 2860,
                "name": "ModifierInvocation",
                "src": "944:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "setTreasury",
                              "referencedDeclaration": 440,
                              "type": "function (address) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2825,
                                  "type": "contract CakeVault",
                                  "value": "cakeVault"
                                },
                                "id": 2862,
                                "name": "Identifier",
                                "src": "964:9:5"
                              }
                            ],
                            "id": 2864,
                            "name": "MemberAccess",
                            "src": "964:21:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2857,
                              "type": "address",
                              "value": "_treasury"
                            },
                            "id": 2865,
                            "name": "Identifier",
                            "src": "986:9:5"
                          }
                        ],
                        "id": 2866,
                        "name": "FunctionCall",
                        "src": "964:32:5"
                      }
                    ],
                    "id": 2867,
                    "name": "ExpressionStatement",
                    "src": "964:32:5"
                  }
                ],
                "id": 2868,
                "name": "Block",
                "src": "954:49:5"
              }
            ],
            "id": 2869,
            "name": "FunctionDefinition",
            "src": "895:108:5"
          },
          {
            "attributes": {
              "functionSelector": "70897b23",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setPerformanceFee",
              "overrides": null,
              "scope": 2990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Sets performance fee\n @dev Only callable by the contract owner."
                },
                "id": 2870,
                "name": "StructuredDocumentation",
                "src": "1009:96:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_performanceFee",
                      "overrides": null,
                      "scope": 2884,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2871,
                        "name": "ElementaryTypeName",
                        "src": "1137:7:5"
                      }
                    ],
                    "id": 2872,
                    "name": "VariableDeclaration",
                    "src": "1137:23:5"
                  }
                ],
                "id": 2873,
                "name": "ParameterList",
                "src": "1136:25:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2876,
                "name": "ParameterList",
                "src": "1181:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3349,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2874,
                    "name": "Identifier",
                    "src": "1171:9:5"
                  }
                ],
                "id": 2875,
                "name": "ModifierInvocation",
                "src": "1171:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "setPerformanceFee",
                              "referencedDeclaration": 460,
                              "type": "function (uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2825,
                                  "type": "contract CakeVault",
                                  "value": "cakeVault"
                                },
                                "id": 2877,
                                "name": "Identifier",
                                "src": "1191:9:5"
                              }
                            ],
                            "id": 2879,
                            "name": "MemberAccess",
                            "src": "1191:27:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2872,
                              "type": "uint256",
                              "value": "_performanceFee"
                            },
                            "id": 2880,
                            "name": "Identifier",
                            "src": "1219:15:5"
                          }
                        ],
                        "id": 2881,
                        "name": "FunctionCall",
                        "src": "1191:44:5"
                      }
                    ],
                    "id": 2882,
                    "name": "ExpressionStatement",
                    "src": "1191:44:5"
                  }
                ],
                "id": 2883,
                "name": "Block",
                "src": "1181:61:5"
              }
            ],
            "id": 2884,
            "name": "FunctionDefinition",
            "src": "1110:132:5"
          },
          {
            "attributes": {
              "functionSelector": "26465826",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setCallFee",
              "overrides": null,
              "scope": 2990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Sets call fee\n @dev Only callable by the contract owner."
                },
                "id": 2885,
                "name": "StructuredDocumentation",
                "src": "1248:89:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_callFee",
                      "overrides": null,
                      "scope": 2899,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2886,
                        "name": "ElementaryTypeName",
                        "src": "1362:7:5"
                      }
                    ],
                    "id": 2887,
                    "name": "VariableDeclaration",
                    "src": "1362:16:5"
                  }
                ],
                "id": 2888,
                "name": "ParameterList",
                "src": "1361:18:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2891,
                "name": "ParameterList",
                "src": "1399:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3349,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2889,
                    "name": "Identifier",
                    "src": "1389:9:5"
                  }
                ],
                "id": 2890,
                "name": "ModifierInvocation",
                "src": "1389:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "setCallFee",
                              "referencedDeclaration": 480,
                              "type": "function (uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2825,
                                  "type": "contract CakeVault",
                                  "value": "cakeVault"
                                },
                                "id": 2892,
                                "name": "Identifier",
                                "src": "1409:9:5"
                              }
                            ],
                            "id": 2894,
                            "name": "MemberAccess",
                            "src": "1409:20:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2887,
                              "type": "uint256",
                              "value": "_callFee"
                            },
                            "id": 2895,
                            "name": "Identifier",
                            "src": "1430:8:5"
                          }
                        ],
                        "id": 2896,
                        "name": "FunctionCall",
                        "src": "1409:30:5"
                      }
                    ],
                    "id": 2897,
                    "name": "ExpressionStatement",
                    "src": "1409:30:5"
                  }
                ],
                "id": 2898,
                "name": "Block",
                "src": "1399:47:5"
              }
            ],
            "id": 2899,
            "name": "FunctionDefinition",
            "src": "1342:104:5"
          },
          {
            "attributes": {
              "functionSelector": "b6ac642a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setWithdrawFee",
              "overrides": null,
              "scope": 2990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Sets withdraw fee\n @dev Only callable by the contract owner."
                },
                "id": 2900,
                "name": "StructuredDocumentation",
                "src": "1452:93:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_withdrawFee",
                      "overrides": null,
                      "scope": 2914,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2901,
                        "name": "ElementaryTypeName",
                        "src": "1574:7:5"
                      }
                    ],
                    "id": 2902,
                    "name": "VariableDeclaration",
                    "src": "1574:20:5"
                  }
                ],
                "id": 2903,
                "name": "ParameterList",
                "src": "1573:22:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2906,
                "name": "ParameterList",
                "src": "1615:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3349,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2904,
                    "name": "Identifier",
                    "src": "1605:9:5"
                  }
                ],
                "id": 2905,
                "name": "ModifierInvocation",
                "src": "1605:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "setWithdrawFee",
                              "referencedDeclaration": 500,
                              "type": "function (uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2825,
                                  "type": "contract CakeVault",
                                  "value": "cakeVault"
                                },
                                "id": 2907,
                                "name": "Identifier",
                                "src": "1625:9:5"
                              }
                            ],
                            "id": 2909,
                            "name": "MemberAccess",
                            "src": "1625:24:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2902,
                              "type": "uint256",
                              "value": "_withdrawFee"
                            },
                            "id": 2910,
                            "name": "Identifier",
                            "src": "1650:12:5"
                          }
                        ],
                        "id": 2911,
                        "name": "FunctionCall",
                        "src": "1625:38:5"
                      }
                    ],
                    "id": 2912,
                    "name": "ExpressionStatement",
                    "src": "1625:38:5"
                  }
                ],
                "id": 2913,
                "name": "Block",
                "src": "1615:55:5"
              }
            ],
            "id": 2914,
            "name": "FunctionDefinition",
            "src": "1550:120:5"
          },
          {
            "attributes": {
              "functionSelector": "1efac1b8",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "setWithdrawFeePeriod",
              "overrides": null,
              "scope": 2990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Sets withdraw fee period\n @dev Only callable by the contract owner."
                },
                "id": 2915,
                "name": "StructuredDocumentation",
                "src": "1676:100:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_withdrawFeePeriod",
                      "overrides": null,
                      "scope": 2929,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 2916,
                        "name": "ElementaryTypeName",
                        "src": "1811:7:5"
                      }
                    ],
                    "id": 2917,
                    "name": "VariableDeclaration",
                    "src": "1811:26:5"
                  }
                ],
                "id": 2918,
                "name": "ParameterList",
                "src": "1810:28:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2921,
                "name": "ParameterList",
                "src": "1858:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3349,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2919,
                    "name": "Identifier",
                    "src": "1848:9:5"
                  }
                ],
                "id": 2920,
                "name": "ModifierInvocation",
                "src": "1848:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "setWithdrawFeePeriod",
                              "referencedDeclaration": 520,
                              "type": "function (uint256) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2825,
                                  "type": "contract CakeVault",
                                  "value": "cakeVault"
                                },
                                "id": 2922,
                                "name": "Identifier",
                                "src": "1868:9:5"
                              }
                            ],
                            "id": 2924,
                            "name": "MemberAccess",
                            "src": "1868:30:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2917,
                              "type": "uint256",
                              "value": "_withdrawFeePeriod"
                            },
                            "id": 2925,
                            "name": "Identifier",
                            "src": "1899:18:5"
                          }
                        ],
                        "id": 2926,
                        "name": "FunctionCall",
                        "src": "1868:50:5"
                      }
                    ],
                    "id": 2927,
                    "name": "ExpressionStatement",
                    "src": "1868:50:5"
                  }
                ],
                "id": 2928,
                "name": "Block",
                "src": "1858:67:5"
              }
            ],
            "id": 2929,
            "name": "FunctionDefinition",
            "src": "1781:144:5"
          },
          {
            "attributes": {
              "functionSelector": "def68a9c",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "inCaseTokensGetStuck",
              "overrides": null,
              "scope": 2990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Withdraw unexpected tokens sent to the Cake Vault"
                },
                "id": 2930,
                "name": "StructuredDocumentation",
                "src": "1931:76:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_token",
                      "overrides": null,
                      "scope": 2965,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 2931,
                        "name": "ElementaryTypeName",
                        "src": "2042:7:5"
                      }
                    ],
                    "id": 2932,
                    "name": "VariableDeclaration",
                    "src": "2042:14:5"
                  }
                ],
                "id": 2933,
                "name": "ParameterList",
                "src": "2041:16:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2936,
                "name": "ParameterList",
                "src": "2077:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3349,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2934,
                    "name": "Identifier",
                    "src": "2067:9:5"
                  }
                ],
                "id": 2935,
                "name": "ModifierInvocation",
                "src": "2067:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "inCaseTokensGetStuck",
                              "referencedDeclaration": 584,
                              "type": "function (address) external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2825,
                                  "type": "contract CakeVault",
                                  "value": "cakeVault"
                                },
                                "id": 2937,
                                "name": "Identifier",
                                "src": "2087:9:5"
                              }
                            ],
                            "id": 2939,
                            "name": "MemberAccess",
                            "src": "2087:30:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2932,
                              "type": "address",
                              "value": "_token"
                            },
                            "id": 2940,
                            "name": "Identifier",
                            "src": "2118:6:5"
                          }
                        ],
                        "id": 2941,
                        "name": "FunctionCall",
                        "src": "2087:38:5"
                      }
                    ],
                    "id": 2942,
                    "name": "ExpressionStatement",
                    "src": "2087:38:5"
                  },
                  {
                    "attributes": {
                      "assignments": [
                        2944
                      ]
                    },
                    "children": [
                      {
                        "attributes": {
                          "constant": false,
                          "mutability": "mutable",
                          "name": "amount",
                          "overrides": null,
                          "scope": 2964,
                          "stateVariable": false,
                          "storageLocation": "default",
                          "type": "uint256",
                          "value": null,
                          "visibility": "internal"
                        },
                        "children": [
                          {
                            "attributes": {
                              "name": "uint256",
                              "type": "uint256"
                            },
                            "id": 2943,
                            "name": "ElementaryTypeName",
                            "src": "2135:7:5"
                          }
                        ],
                        "id": 2944,
                        "name": "VariableDeclaration",
                        "src": "2135:14:5"
                      },
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "uint256",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "balanceOf",
                              "referencedDeclaration": 3772,
                              "type": "function (address) view external returns (uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "contract IERC20",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3833,
                                      "type": "type(contract IERC20)",
                                      "value": "IERC20"
                                    },
                                    "id": 2945,
                                    "name": "Identifier",
                                    "src": "2152:6:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2932,
                                      "type": "address",
                                      "value": "_token"
                                    },
                                    "id": 2946,
                                    "name": "Identifier",
                                    "src": "2159:6:5"
                                  }
                                ],
                                "id": 2947,
                                "name": "FunctionCall",
                                "src": "2152:14:5"
                              }
                            ],
                            "id": 2948,
                            "name": "MemberAccess",
                            "src": "2152:24:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "tryCall": false,
                              "type": "address",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_VaultOwner_$2990",
                                      "typeString": "contract VaultOwner"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "type": "type(address)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "name": "address",
                                      "type": null
                                    },
                                    "id": 2949,
                                    "name": "ElementaryTypeName",
                                    "src": "2177:7:5"
                                  }
                                ],
                                "id": 2950,
                                "name": "ElementaryTypeNameExpression",
                                "src": "2177:7:5"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -28,
                                  "type": "contract VaultOwner",
                                  "value": "this"
                                },
                                "id": 2951,
                                "name": "Identifier",
                                "src": "2185:4:5"
                              }
                            ],
                            "id": 2952,
                            "name": "FunctionCall",
                            "src": "2177:13:5"
                          }
                        ],
                        "id": 2953,
                        "name": "FunctionCall",
                        "src": "2152:39:5"
                      }
                    ],
                    "id": 2954,
                    "name": "VariableDeclarationStatement",
                    "src": "2135:56:5"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "safeTransfer",
                              "referencedDeclaration": 3867,
                              "type": "function (contract IERC20,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "tryCall": false,
                                  "type": "contract IERC20",
                                  "type_conversion": true
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 3833,
                                      "type": "type(contract IERC20)",
                                      "value": "IERC20"
                                    },
                                    "id": 2955,
                                    "name": "Identifier",
                                    "src": "2201:6:5"
                                  },
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 2932,
                                      "type": "address",
                                      "value": "_token"
                                    },
                                    "id": 2956,
                                    "name": "Identifier",
                                    "src": "2208:6:5"
                                  }
                                ],
                                "id": 2957,
                                "name": "FunctionCall",
                                "src": "2201:14:5"
                              }
                            ],
                            "id": 2958,
                            "name": "MemberAccess",
                            "src": "2201:27:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "sender",
                              "referencedDeclaration": null,
                              "type": "address payable"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -15,
                                  "type": "msg",
                                  "value": "msg"
                                },
                                "id": 2959,
                                "name": "Identifier",
                                "src": "2229:3:5"
                              }
                            ],
                            "id": 2960,
                            "name": "MemberAccess",
                            "src": "2229:10:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 2944,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 2961,
                            "name": "Identifier",
                            "src": "2241:6:5"
                          }
                        ],
                        "id": 2962,
                        "name": "FunctionCall",
                        "src": "2201:47:5"
                      }
                    ],
                    "id": 2963,
                    "name": "ExpressionStatement",
                    "src": "2201:47:5"
                  }
                ],
                "id": 2964,
                "name": "Block",
                "src": "2077:178:5"
              }
            ],
            "id": 2965,
            "name": "FunctionDefinition",
            "src": "2012:243:5"
          },
          {
            "attributes": {
              "functionSelector": "8456cb59",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "pause",
              "overrides": null,
              "scope": 2990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Triggers stopped state\n @dev Only possible when contract not paused."
                },
                "id": 2966,
                "name": "StructuredDocumentation",
                "src": "2261:101:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2967,
                "name": "ParameterList",
                "src": "2381:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2970,
                "name": "ParameterList",
                "src": "2403:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3349,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2968,
                    "name": "Identifier",
                    "src": "2393:9:5"
                  }
                ],
                "id": 2969,
                "name": "ModifierInvocation",
                "src": "2393:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "pause",
                              "referencedDeclaration": 599,
                              "type": "function () external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2825,
                                  "type": "contract CakeVault",
                                  "value": "cakeVault"
                                },
                                "id": 2971,
                                "name": "Identifier",
                                "src": "2413:9:5"
                              }
                            ],
                            "id": 2973,
                            "name": "MemberAccess",
                            "src": "2413:15:5"
                          }
                        ],
                        "id": 2974,
                        "name": "FunctionCall",
                        "src": "2413:17:5"
                      }
                    ],
                    "id": 2975,
                    "name": "ExpressionStatement",
                    "src": "2413:17:5"
                  }
                ],
                "id": 2976,
                "name": "Block",
                "src": "2403:34:5"
              }
            ],
            "id": 2977,
            "name": "FunctionDefinition",
            "src": "2367:70:5"
          },
          {
            "attributes": {
              "functionSelector": "3f4ba83a",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "unpause",
              "overrides": null,
              "scope": 2990,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "external"
            },
            "children": [
              {
                "attributes": {
                  "text": " @notice Returns to normal state\n @dev Only possible when contract is paused."
                },
                "id": 2978,
                "name": "StructuredDocumentation",
                "src": "2443:101:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2979,
                "name": "ParameterList",
                "src": "2565:2:5"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 2982,
                "name": "ParameterList",
                "src": "2587:0:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 3349,
                      "type": "modifier ()",
                      "value": "onlyOwner"
                    },
                    "id": 2980,
                    "name": "Identifier",
                    "src": "2577:9:5"
                  }
                ],
                "id": 2981,
                "name": "ModifierInvocation",
                "src": "2577:9:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "arguments": [
                            null
                          ],
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                null
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "unpause",
                              "referencedDeclaration": 614,
                              "type": "function () external"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 2825,
                                  "type": "contract CakeVault",
                                  "value": "cakeVault"
                                },
                                "id": 2983,
                                "name": "Identifier",
                                "src": "2597:9:5"
                              }
                            ],
                            "id": 2985,
                            "name": "MemberAccess",
                            "src": "2597:17:5"
                          }
                        ],
                        "id": 2986,
                        "name": "FunctionCall",
                        "src": "2597:19:5"
                      }
                    ],
                    "id": 2987,
                    "name": "ExpressionStatement",
                    "src": "2597:19:5"
                  }
                ],
                "id": 2988,
                "name": "Block",
                "src": "2587:36:5"
              }
            ],
            "id": 2989,
            "name": "FunctionDefinition",
            "src": "2549:74:5"
          }
        ],
        "id": 2990,
        "name": "ContractDefinition",
        "src": "222:2403:5"
      }
    ],
    "id": 2991,
    "name": "SourceUnit",
    "src": "0:2625:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.12+commit.27d51765.Emscripten.clang"
  },
  "networks": {
    "41": {
      "events": {
        "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "previousOwner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "name": "OwnershipTransferred",
          "type": "event"
        }
      },
      "links": {},
      "address": "0xf6490dEf195B515D4F0B83D86daAb93Aba5c507a",
      "transactionHash": "0xae293b84663bd2b87888b27f696bff0e334901216186d2fc7f2e27097cff1f3d"
    }
  },
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-10-21T19:19:36.625Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_cakeVaultAddress": ": CakeVault contract address"
        }
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "pause()": {
        "details": "Only possible when contract not paused."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setAdmin()": {
        "details": "Only callable by the contract owner. It makes the admin == owner."
      },
      "setCallFee(uint256)": {
        "details": "Only callable by the contract owner."
      },
      "setPerformanceFee(uint256)": {
        "details": "Only callable by the contract owner."
      },
      "setTreasury(address)": {
        "details": "Only callable by the contract owner."
      },
      "setWithdrawFee(uint256)": {
        "details": "Only callable by the contract owner."
      },
      "setWithdrawFeePeriod(uint256)": {
        "details": "Only callable by the contract owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "unpause()": {
        "details": "Only possible when contract is paused."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": "Constructor",
      "inCaseTokensGetStuck(address)": {
        "notice": "Withdraw unexpected tokens sent to the Cake Vault"
      },
      "pause()": {
        "notice": "Triggers stopped state"
      },
      "setAdmin()": {
        "notice": "Sets admin address to this address"
      },
      "setCallFee(uint256)": {
        "notice": "Sets call fee"
      },
      "setPerformanceFee(uint256)": {
        "notice": "Sets performance fee"
      },
      "setTreasury(address)": {
        "notice": "Sets treasury address"
      },
      "setWithdrawFee(uint256)": {
        "notice": "Sets withdraw fee"
      },
      "setWithdrawFeePeriod(uint256)": {
        "notice": "Sets withdraw fee period"
      },
      "unpause()": {
        "notice": "Returns to normal state"
      }
    },
    "version": 1
  }
}